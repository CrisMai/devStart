
-------- Matriz ------

As matrizes são estruturas de dados. 
Uma matriz é uma lista de valores.

Para criar uma matriz vazia é usado colchetes []
Os elementos dentro da matriz são chamados de itens.
Cada item da matriz é separado por vírgula.


------- Índice da matriz --------

O índice é o número que representa a posição do item dentro da matriz.
O índice da matriz começa sempre em 0.


-------- Comprimento da matriz ---------

O .length é uma propriedade que retorna o comprimento(número de itens)
da matriz.

Para encontrar a posição (índice) do último item de uma matriz, use a 
seguinte expressão: matriz[matriz.length - 1].

Ex: function obterTotalDeNotas(notas) {
    return notas.length
}

Ex 2: function obterUltimaNota(notas) {
    return notas[notas.length -1]
}


------ Adicionando itens à matriz ---------

O método .push() adiciona um item em uma matriz.
O método .push() não retorna uma matriz, ele retorna um número que é o 
novo comprimento da matriz.

Ex: function adicionarNotas(notas, nota) {
    notas.push(nota)
    return notas
}

Ex 2: function adicionarBanana(itens) {
    itens.push("Banana")
    return itens
}

-------- Método .includes() ----------

O método .includes() permite verificar se um item existe dentro de uma
matriz. O retorno desse método é do tipo booleano.
O .includes() só pode ser chamado a partir de uma matriz.


-------- Método .join() -----------

O método .join() converte a matriz em uma string. 
Na string retornada pelo .join(), os caracteres passados como 
parâmetro são inseridos entre itens da matriz.


--------Iteração -----------

A iteração nos permite executar uma tarefa repetitiva para cada item 
de uma matriz, sem a necessidade de escrever o mesmo código várias 
vezes.
Uma tarefa comum que podemos resolver com iteração é calcular a soma
dos itens de uma matriz.


--------- Método .forEach() -------

Permite iterar com os elementos da matriz.
A função que você passar como parâmetro para o .forEach()
será chamada para cada item da matriz.

Ex: let usuarios = ["Gustavo", "Bianca, "Marcelo"]
    usuarios.forEach(function(usuario) {
        console.log(usuario)
    })


--------- Callback ---------

A função callback é passada como parâmetro do .forEach(), e será
chamada automaticamente pela linguagem de programação.
Podemos remover o nome da função callback, ela passa, então, ser 
chamada de função anônima.

O "for each" chama a função callback e passa a ela um item da matriz
como parâmetro. Esse processo é repetido para todos os itens da matriz.


-------- Soma com iteração de matriz -------

Use a iteração de matriz com .forEach() para calcular a soma dos itens 
da matriz.
O local correto para inicializar a variável da soma é antes do .forEach().


-------- Mapa da matriz ---------

O método .map() permite que você aplique uma transformação para cada item
de uma matriz.
O resultado do .map() será uma outra matriz contendo o mesmo número de itens
da matriz original, mas com a transformação aplicada.
Ao usar o .map(), não esqueça de inserir o return.

Ex: function obterNotasAumentadasEm2(notas) {
    return notas.map(function(nota) {
        return nota + 2
    })
}

Ex 2: function nomesEmMinusculas(nomes) {
    return nomes.map(function(nome) {
    return nome.toLowerCase()
 })
}


-------- Método Reduce() --------

É usado para calcular um único valor a partir de uma matriz.
Ao trabalhar com matrizes de números, os casos mais comuns de uso do reduce()
são a soma e a multiplicação.
O método reduce() aceita um redutor. O redutor é um callback que determina a 
lógica usada para reduzir a matriz a um único número.

O método reduce() recebe dois parâmetros: o redutor e o valor inicial.
Para a redução por soma, o valor inicial é sempre zero.
O redutor é uma função callback que recebe dois argumentos: total e atual.
A variável total (acumulador) é atualizada a cada passo da redução. Na redução
por soma, ela contém a soma acumulada dos itens anteriores da matriz, mais o nitem atual.

Ex: function obterSomaDasNotas(notas) {
    return notas = notas.reduce(function(total, atual) {
        return total + atual
    }, 0)
}


------- Redução por multiplicação -------

Na redução de matriz por multiplicação, usamos um valor inicial igual a 1.


------- Matriz de strings ----------

As matrizes de strings são aquelas cujos itens são dados do tipo string.
O funcionamento desse tipo de matriz é semelhante ao das matrizes de números.


------- Métodos de matriz ------

Os métodos .forEach(), .includes(), .join(), .map() podem ser usados em matrizes 
de strings.


------- Strings com caracteres especiais ---------

Para incluir aspas simples, aspas duplas ou caractere de crase dentro de uma string
você pode usar o caractere de escape (\).
O caractere de escape deve ser incluído antes do caractere que você deseja incluir.


-------- Operador lógico de negação --------

O operador de negação (!) forneceo oposto de uma variável booleana.
!true  retorna false.
!false retorna true.


------- Operadores lógicos e (&&) ou (||) ---------

Os operadores permitem comparar duas expressões.
O operador lógico && só retorna true quando as duas expressões 
forem verdadeiras.
O operador lógico || retorna true quando pelo menos uma das expressões
é verdadeira.